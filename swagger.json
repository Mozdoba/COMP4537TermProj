{
  "basePath": "/4537/termproject/API/V1",
  "consumes":[],
  "definitions": {
    "location":{
      "$ref": "",
      "additionalProperties": {},
      "allOf": [],
      "default": "",
      "description": "",
      "discriminator": "",
      "enum": [],
      "example": "",
      "exclusiveMaximum": false,
      "exclusiveMinimum": false,
      "externalDocs": {},
      "format": "",
      "items": {},
      "maximum": 0,
      "maxItems": 0,
      "maxLength": 0,
      "maxProperties": 0,
      "minimum": 0,
      "minItems":0,
      "minLength":0,
      "minProperties":0,
      "multipleOf": 0,
      "pattern": "",
      "properties": {},
      "required": [],
      "readOnly": false,
      "uniqueItems": false,
      "title": "",
      "type":"string",
      "xml": {}
    },
    "user": {
      "$ref": "",
      "additionalProperties": {},
      "allOf": [],
      "default": "",
      "description": "",
      "discriminator": "",
      "enum": [],
      "example": "",
      "exclusiveMaximum": false,
      "exclusiveMinimum": false,
      "externalDocs": {},
      "format": "",
      "items": {},
      "maximum": 0,
      "maxItems": 0,
      "maxLength": 0,
      "maxProperties": 0,
      "minimum": 0,
      "minItems":0,
      "minLength":0,
      "minProperties":0,
      "multipleOf": 0,
      "pattern": "",
      "properties": {},
      "required": [],
      "readOnly": false,
      "uniqueItems": false,
      "title": "",
      "type":"string",
      "xml": {}
    }
  },
  "externalDocs": {},
  "host": "michealozdoba.com",
  "info": {
    "version": "1.0.0",
    "title": "COMP4537 Term Project API",
    "description": "Open API Specifications for COMP4537 Term Project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/post": {
      "delete": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces":["application/json"],
        "deprecated": false,
        "description": "Delete a Post",
        "operationId": "deletePostById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of post to delete",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted post with id"
          },
          "400": {
            "description": "Failed to delete post with id"
          }
        },
        "summary": "Delete a location",
        "tags": ["post"]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Returns all locations",
        "externalDocs": {},
        "operationId": "selectAllFromLocation",
        "parameters": [],
        "produces":["text/html"],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        },
        "security": [],
        "schemes": [],
        "summary": "Return a list of all locations",
        "tags": ["post"]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces":["application/json"],
        "deprecated": false,
        "description": "Create a post",
        "operationId": "createPost",
        "parameters": [
          {
            "name": "fileSrc",
            "in": "body",
            "description": "file source",
            "required": true,
            "schema": {
              "type": "string",
              "example": {
                "fileSrc": "Vancouver"
              }
            }
          },
          {
            "name": "location",
            "in": "body",
            "description": "Name of location to create post for",
            "required": true,
            "schema": {
              "type": "string",
              "example": {
                "location": "Vancouver"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Create a location",
        "tags": ["post"]
      },
      "put": {
        "consumes": [
          "application/x-www-form-urlencoded",
          "text/html"
        ],
        "deprecated": false,
        "description": "Create a location",
        "operationId": "createLocationByName",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "description": "Name of location to create",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "location": "Kelowna"
              }
            }
          }
        ],
        "produces":["text/html"],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Create a location",
        "tags": ["post"]
      }
    },
    "/location": {
      "delete": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces":["application/json"],
        "deprecated": false,
        "description": "Delete a Location",
        "operationId": "createLocationByName",
        "parameters": [
          {
            "in": "path",
            "name": "location",
            "description": "Name of location to delete",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted location with name"
          },
          "400": {
            "description": "Failed to delete location with name"
          }
        },
        "summary": "Delete a location",
        "tags": ["location"]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Returns all locations",
        "externalDocs": {},
        "operationId": "selectAllFromLocation",
        "parameters": [],
        "produces":["text/html"],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        },
        "security": [],
        "schemes": [],
        "summary": "Return a list of all locations",
        "tags": ["location"]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded",
          "text/html"
        ],
        "deprecated": false,
        "description": "Create a location",
        "operationId": "createLocationByName",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "description": "Name of location to create",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "location": "Kelowna"
              }
            }
          }
        ],
        "produces":["text/html"],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Create a location",
        "tags": ["location"]
      }
    },
    "/stats": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded",
          "text/html"],
        "deprecated": false,
        "description": "Returns number of requests served for all endpoints",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "name": "id",
            "in": "body",
            "description": "Id of User",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "id": "1"
              }
            }
          }
        ],
        "produces":["application/json"],
        "responses": {
          "200": {
            "description": "Successful Response",
            "examples": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [],
        "schemes": [],
        "summary": "Returns list of stats",
        "tags": ["stats"]
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded",
          "text/html"],
        "deprecated": false,
        "description": "Returns registerd users Id and auth-token",
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "Name and password of registerd user",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "username": "username",
                "password": "password"
              }
            }
          }
        ],
        "produces":["application/json"],
        "responses": {
          "200": {
            "description": "Successful Response",
            "examples": {}
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [],
        "schemes": [],
        "summary": "Logs in registered user",
        "tags": ["login"]
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded",
          "text/html"],
        "deprecated": false,
        "description": "Returns registerd users Id and auth-token",
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "Name and password of registerd user",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "username": "username",
                "password": "password"
              }
            }
          }
        ],
        "produces":["application/json"],
        "responses": {
          "200": {
            "description": "Successful Response",
            "examples": {}
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [],
        "schemes": [],
        "summary": "registers a user",
        "tags": ["register"]
      }
    }
  },
  "parameters": {},
  "produces":[],
  "responses": {},
  "schemes": ["https"],
  "security": [],
  "securityDefinitions": {},
  "swagger": "2.0",
  "tags":[
    {
      "externalDocs": {
        "description": "",
        "url": ""
      },
      "name": "location",
      "description": "Locations created by users"
    },
    {
      "externalDocs": {
        "description": "",
        "url": ""
      },
      "name": "login",
      "description": "Logs in user"
    },
    {
      "externalDocs": {
        "description": "",
        "url": ""
      },
      "name": "post",
      "description": "User posts"
    },
    {
      "externalDocs": {
        "description": "",
        "url": ""
      },
      "name": "stats",
      "description": "Stats for each existing endpoints"
    },
    {
      "externalDocs": {
        "description": "",
        "url": ""
      },
      "name": "user",
      "description": ""
    }
  ]
}